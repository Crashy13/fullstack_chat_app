{"version":3,"sources":["Components/MessageInputs.js","Components/MessageDetail.js","Components/ChatWindow.js","Components/Registration.js","Components/Login.js","Components/Navbar.js","Components/ChatApp.js","reportWebVitals.js","index.js"],"names":["MessageInputs","props","state","userinput","messages","addMessage","bind","handleInput","e","this","setState","target","name","value","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","map","input","id","className","onSubmit","type","onChange","React","Component","MessageDetail","isEditing","chatMessage","saveMessage","event","updateMessage","username","onClick","removeMessage","format","created_at","ChatWindow","text","ok","Error","json","data","index","findIndex","splice","addmessage","Registration","email","password1","password2","handleSubmit","preventDefault","handleRegistration","placeholder","Login","password","handleLogin","Navbar","handleNavigation","handleLogout","ChatApp","selection","user","a","handleError","err","console","warn","catch","set","key","remove","isAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.671a9546.chunk.js","sourcesContent":["import React from 'react'\nimport Cookies from 'js-cookie'\n\nclass MessageInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: [],\n      messages: [],\n    }\n\n    this.addMessage = this.addMessage.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  addMessage(e) {\n\n      const message = {\n        message: this.state.message,\n      };\n\n      const options = {\n        method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(message),\n      }\n\n      fetch('/api/v1/chatmessages/', options)\n        .then(response => {\n          const messages = [...this.state.messages];\n          this.setState({ messages })\n        })\n    }\n\n    \n\n\n\n  render() {\n    const userinput = this.state.userinput.map(input => (\n      <li key={input.id}>\n      <p>{userinput.input}</p>\n      </li>\n    ))\n    return(\n      <form className=\"input_field\" onSubmit={this.addMessage}>\n      <input className=\"type_input\" type=\"textarea\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n      <button className=\"button_input\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageInputs\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport Moment from 'react-moment';\n\n\nclass MessageDetail extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      message: this.props.chatMessage.message,\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.saveMessage = this.saveMessage.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  saveMessage() {\n    const chatMessage = this.props.chatMessage;\n    // calls chatMessage from the parent\n    chatMessage.message = this.state.message;\n    // sets the message from chatMessage to state\n    this.props.updateMessage(chatMessage);\n    // calls the method updateMessage from the parent\n    this.setState({isEditing: false});\n    // changes isEditing back to false so it returns to the default view\n  }\n\n  render() {\n    const chatMessage = this.props.chatMessage;\n    return(\n      <li>\n        <p className=\"username\">{chatMessage.username}</p>\n\n        {this.state.isEditing\n          ? <input type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n          : <p className=\"message_display\">{chatMessage.message}</p>}\n\n        {this.state.isEditing\n          ? <button type='button' onClick={this.saveMessage}>Save</button>\n          // this.saveMessage called the saveMessage function above\n          : <button type=\"button\" onClick={() => this.setState({isEditing: true})}>Edit</button>}\n\n        <button type='button' onClick={() => this.props.removeMessage(chatMessage.id)}>Delete</button>\n        <Moment format=\"MM/DD/YYYY hh:mm:ss\" className=\"date-field\">{chatMessage.created_at}</Moment>\n      </li>\n    )\n  }\n}\n\nexport default MessageDetail\n","import React from 'react'\nimport MessageInputs from './MessageInputs'\nimport Cookies from 'js-cookie'\nimport Moment from 'react-moment';\nimport MessageDetail from './MessageDetail'\n\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      isEditing: null,\n      text: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.updateMessage = this.updateMessage.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/chatmessages/')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => this.setState({ messages: data }));\n  }\n\n  updateMessage(chatMessage) {\n\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(chatMessage),\n      // the content being sent to the backend\n    }\n\n    fetch(`/api/v1/chatmessages/${chatMessage.id}/`, options)\n      .then(response => response.json())\n      // takes the response from the fetch request and turns it into json\n      .then(data => {\n        const messages = [...this.state.messages];\n        // makes a shallow copy of messages\n        const index = messages.findIndex(message => message.id === chatMessage.id);\n        // finds the index of the message and makes sure the message id is equal to the original chatMessage id to replace it\n        messages[index] = data;\n        // changes the value of the message to the value of the data that was PUT up\n        this.setState({messages});\n        // sets state to the new list of messages\n      });\n  }\n\n  removeMessage(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    }\n\n    fetch(`/api/v1/chatmessages/${id}/`, options)\n      .then(response => {\n        const messages = [...this.state.messages];\n        const index = messages.findIndex(message => message.id === id);\n        messages.splice(index, 1);\n        this.setState({messages})\n      })\n  }\n\n  render() {\n\n    const messages = this.state.messages.map(message => (\n\n    <MessageDetail key={message.id} chatMessage={message} updateMessage={this.updateMessage}/>\n\n\n    ))\n    return(\n      <>\n        <ul>{messages}</ul>\n        <MessageInputs addmessage={this.addMessage} />\n      </>\n    )\n  }\n}\n\n\nexport default ChatWindow\n","import React from 'react';\n\nclass Registration extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault();\n      this.props.handleRegistration(this.state);\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"enter password again\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n          <button type=\"Submit\">Register</button>\n        </form>\n      );\n    }\n  }\n\nexport default Registration\n","import React from 'react';\n\nclass Login extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.handleLogin(this.state)\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password1} onChange={this.handleInput}/>\n          <button type=\"Submit\">Login</button>\n        </form>\n      );\n    }\n  }\n\nexport default Login\n","function Navbar(props) {\n  return(\n    <nav>\n        <button className=\"login\" onClick={() => props.handleNavigation('login')}>Login</button>\n        <button className=\"registration\" onClick={() => props.handleNavigation('registration')}>Register</button>\n        <button className=\"logout\" onClick={() => props.handleLogout('logout')}>Logout</button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport './App.css';\nimport ChatWindow from './ChatWindow'\nimport Registration from './Registration'\nimport Login from './Login'\nimport Cookies from 'js-cookie'\nimport Navbar from './Navbar'\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chatwindow' : 'login'\n    }\n\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n  handleNavigation(selection) {\n    this.setState({ selection });\n  }\n\n  async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`)\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n  async handleLogin(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n    async handleLogout() {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        }\n      };\n\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n      if(response.ok) {\n        Cookies.remove('Authorization');\n        this.setState({ selection: 'login' })\n      }\n    }\n\n\n\n\n  render(){\n    return (\n      <>\n        <Navbar handleNavigation={this.handleNavigation} isAuth={this.state.selection === 'chatwindow'} handleLogout={this.handleLogout}/>\n          <div className=\"container\">\n            {this.state.selection === 'login' && <Login handleNavigation={this.handleNavigation} handleLogin={this.handleLogin}/>}\n            {this.state.selection === 'registration' && <Registration handleNavigation={this.handleNavigation} handleRegistration ={this.handleRegistration}/>}\n            {this.state.selection === 'chatwindow' && <ChatWindow />}\n          </div>\n      </>\n    )\n  }\n}\n\nexport default ChatApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatApp from './Components/ChatApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}