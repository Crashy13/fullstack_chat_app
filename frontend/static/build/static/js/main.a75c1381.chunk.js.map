{"version":3,"sources":["Components/MessageInputs.js","Components/ChatWindow.js","Components/Registration.js","Components/Login.js","Components/Navbar.js","Components/ChatApp.js","reportWebVitals.js","index.js"],"names":["MessageInputs","props","state","userinput","messages","addMessage","bind","handleInput","e","this","setState","target","name","value","message","a","options","method","headers","Cookies","get","body","JSON","stringify","handleError","err","console","warn","fetch","catch","response","ok","json","data","set","key","selection","map","input","id","className","onSubmit","type","onChange","React","Component","ChatWindow","then","username","created_at","Registration","email","password1","password2","handleSubmit","preventDefault","handleRegistration","placeholder","Login","password","handleLogin","Navbar","onClick","handleNavigation","handleLogout","ChatApp","user","remove","isAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a75c1381.chunk.js","sourcesContent":["import React from 'react'\nimport Cookies from 'js-cookie';\n\nclass MessageInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: [],\n      messages: [],\n    }\n\n    this.addMessage = this.addMessage.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  async addMessage(message) {\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(message),\n    }\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/api/v1/chatmessages/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState({ selection: 'chatwindow' });\n    }\n  }\n\n\n\n  render() {\n    const userinput = this.state.userinput.map(input => (\n      <li key={input.id}>\n      <p>{userinput.input}</p>\n      </li>\n    ))\n    return(\n      <form className=\"input_field\" onSubmit={this.addMessage}>\n      <input className=\"type_input\" type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n      <button className=\"button_input\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageInputs\n","import React from 'react'\nimport MessageInputs from './MessageInputs'\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/chatmessages/')\n      .then(response => response.json())\n      .then(data => this.setState({ messages: data }));\n  }\n\n\n\n  render() {\n    const messages = this.state.messages.map(message => (\n      <ul>\n      <li key={message.id}>\n        <p>{JSON.stringify(message.username)}</p>\n        <p className=\"message_display\">{JSON.stringify(message.message)}</p>\n        <p className=\"date-field\">{message.created_at}</p>\n      </li>\n      </ul>\n    ))\n    return(\n      <>\n        {messages}\n        <MessageInputs />\n      </>\n    )\n  }\n}\n\nexport default ChatWindow\n","import React from 'react';\nimport Cookies from 'js-cookie'\n\nclass Registration extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault();\n      this.props.handleRegistration(this.state);\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"enter password again\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n          <button type=\"Submit\">Register</button>\n        </form>\n      );\n    }\n  }\n\nexport default Registration\n","import React from 'react';\nimport Cookies from 'js-cookie'\n\nclass Login extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.handleLogin(this.state)\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleLogin}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password1} onChange={this.handleInput}/>\n          <button type=\"Submit\">Login</button>\n        </form>\n      );\n    }\n  }\n\nexport default Login\n","function Navbar(props) {\n  return(\n    <nav>\n      <div>\n        <button onClick={() => props.handleNavigation('chatwindow')}>Home</button>\n        <button onClick={() => props.handleNavigation('login')}>Login</button>\n        <button onClick={() => props.handleNavigation('registration')}>Register</button>\n        <button onClick={() => props.handleLogout()}>Logout</button>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport './App.css';\nimport ChatWindow from './ChatWindow'\nimport Registration from './Registration'\nimport Login from './Login'\nimport Cookies from 'js-cookie'\nimport Navbar from './Navbar'\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chatwindow' : 'login'\n    }\n\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n  handleNavigation(selection) {\n    this.setState({ selection });\n  }\n\n  async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`)\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n  async handleLogin(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n    async handleLogout() {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        }\n      };\n\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n      if(response.ok) {\n        Cookies.remove('Authorization');\n        this.setState({ selection: 'login' })\n      }\n    }\n\n\n\n\n  render(){\n\n    return (\n      <>\n        <Navbar handleNavigation={this.handleNavigation} isAuth={this.state.selection === 'chatwindow'} handleLogout={this.handleLogout}/>\n        <div className=\"container\">\n          {this.state.selection === 'login' && <Login handleNavigation={this.handleNavigation} handleLogin={this.handleLogin}/>}\n          {this.state.selection === 'registration' && <Registration handleNavigation={this.handleNavigation} handleRegistration ={this.handleRegistration}/>}\n          {this.state.selection === 'chatwindow' && <ChatWindow addMessage={this.addMessage}/>}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default ChatApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatApp from './Components/ChatApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}