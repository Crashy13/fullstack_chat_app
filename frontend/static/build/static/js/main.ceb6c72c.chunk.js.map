{"version":3,"sources":["Components/ChatWindow.js","Components/MessageInputs.js","Components/Registration.js","Components/Login.js","Components/ChatApp.js","reportWebVitals.js","index.js"],"names":["ChatWindow","props","state","messages","fetch","then","response","json","data","setState","this","map","message","JSON","stringify","username","className","created_at","id","React","Component","MessageInputs","userinput","addMessage","bind","handleInput","e","target","name","value","options","method","headers","Cookies","get","body","input","onSubmit","type","onChange","Registration","email","password1","password2","handleSubmit","preventDefault","handleRegistration","placeholder","Login","password","handleLogin","ChatApp","a","user","handleError","err","console","warn","catch","log","key","set","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ceb6c72c.chunk.js","sourcesContent":["import React from 'react'\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/chatmessages/')\n      .then(response => response.json())\n      .then(data => this.setState({ messages: data }));\n  }\n\n\n\n  render() {\n    const messages = this.state.messages.map(message => (\n      <ul>\n      <li key={message.id}>\n        <p>{JSON.stringify(message.username)}</p>\n        <p className=\"message_display\">{JSON.stringify(message.message)}</p>\n        <p className=\"date-field\">{message.created_at}</p>\n      </li>\n      </ul>\n    ))\n    return(\n      <>\n        {messages}\n      </>\n    )\n  }\n}\n\nexport default ChatWindow\n","import React from 'react'\nimport Cookies from 'js-cookie';\n\nclass MessageInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: [],\n      messages: [],\n    }\n\n    this.addMessage = this.addMessage.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  addMessage(e) {\n\n    const message = {\n      message: this.state.message,\n    };\n\n    const options = {\n      method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(message),\n    }\n\n    fetch('/api/v1/chatmessages/', options)\n      .then(response => {\n        const messages = [...this.state.messages];\n        this.setState({ messages })\n      })\n  }\n\n\n\n  render() {\n    const userinput = this.state.userinput.map(input => (\n      <li key={input.id}>\n      <p>{userinput.input}</p>\n      </li>\n    ))\n    return(\n      <form className=\"input_field\" onSubmit={this.addMessage}>\n      <input className=\"type_input\" type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n      <button className=\"button_input\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageInputs\n","import React from 'react';\nimport Cookies from 'js-cookie'\n\nclass Registration extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.handleRegistration(this.state);\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleRegistration}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"enter password again\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n          <button type=\"Submit\">Register</button>\n        </form>\n      );\n    }\n  }\n\nexport default Registration\n","import React from 'react';\nimport Cookies from 'js-cookie'\n\nclass Login extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.handleLogin(this.state)\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password1} onChange={this.handleInput}/>\n          <button type=\"Submit\">Login</button>\n        </form>\n      );\n    }\n  }\n\nexport default Login\n","import React from 'react';\nimport './App.css';\nimport ChatWindow from './ChatWindow'\nimport MessageInputs from './MessageInputs'\nimport Registration from './Registration'\nimport Login from './Login'\nimport Cookies from 'js-cookie'\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n    this.handleRegistration = this.handleRegistration.bind(this)\n    this.handleLogin = this.handleLogin.bind(this)\n  }\n\n  async handleLogin(e) {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n    const data = await response.json().catch(handleError);\n\n    console.log(user)\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n    }\n\n    }\n\n  async handleRegistration(e) {\n    e.preventDefault();\n\n    const user = {\n      username: this.state.username,\n      email: this.state.email,\n      password1: this.state.password1,\n      password2: this.state.password2,\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n    const data = await response.json().catch(handleError);\n\n    console.log(user)\n    if(data.key) {\n      Cookies.set('Authorization', `Token ${data.key}`);\n    }\n\n    }\n\n\n  render(){\n    return (\n      <>\n        <header>MESSENGER</header>\n        <Registration />\n        <Login />\n        <div className=\"container\">\n          <div className=\"window\">\n          <ChatWindow messages={this.state.messages} />\n          <MessageInputs userinput={this.state.input} />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default ChatApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatApp from './Components/ChatApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}