{"version":3,"sources":["Components/MessageInputs.js","Components/MessageDetail.js","Components/ChatWindow.js","Components/Registration.js","Components/Login.js","Components/Navbar.js","Components/ChatApp.js","reportWebVitals.js","index.js"],"names":["MessageInputs","props","state","userinput","messages","addMessage","bind","handleInput","e","this","setState","target","name","value","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","map","input","id","className","onSubmit","type","onChange","React","Component","MessageDetail","isEditing","chatMessage","saveMessage","event","updateMessage","username","format","created_at","is_owner","onClick","removeMessage","ChatWindow","fetchData","retrieveMessages","setInterval","clearInterval","ok","Error","json","data","index","findIndex","splice","addmessage","Registration","email","password1","password2","handleSubmit","preventDefault","handleRegistration","placeholder","Login","password","handleLogin","Navbar","handleNavigation","handleLogout","ChatApp","selection","user","a","handleError","err","console","warn","catch","set","key","remove","html","isAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29e48cf4.chunk.js","sourcesContent":["import React from 'react'\nimport Cookies from 'js-cookie'\n\nclass MessageInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: [],\n      messages: [],\n    }\n\n    this.addMessage = this.addMessage.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  addMessage(e) {\n\n      const message = {\n        message: this.state.message,\n      };\n\n      const options = {\n        method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(message),\n      }\n\n      fetch('/api/v1/chatmessages/', options)\n        .then(response => {\n          const messages = [...this.state.messages];\n          this.setState({ messages })\n        })\n    }\n\n\n\n\n\n  render() {\n    const userinput = this.state.userinput.map(input => (\n      <li key={input.id}>\n      <p>{userinput.input}</p>\n      </li>\n    ))\n    return(\n      <form className=\"input_field\" onSubmit={this.addMessage}>\n      <textarea className=\"type_input\" type=\"textarea\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n      <button className=\"button_input\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageInputs\n","import React from 'react';\nimport Moment from 'react-moment';\n\n\nclass MessageDetail extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      message: this.props.chatMessage.message,\n    }\n\n    this.handleInput = this.handleInput.bind(this);\n    this.saveMessage = this.saveMessage.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  saveMessage() {\n    const chatMessage = this.props.chatMessage;\n    // calls chatMessage from the parent\n    chatMessage.message = this.state.message;\n    // sets the message from chatMessage to state\n    this.props.updateMessage(chatMessage);\n    // calls the method updateMessage from the parent\n    this.setState({isEditing: false});\n    // changes isEditing back to false so it returns to the default view\n  }\n\n  render() {\n    const chatMessage = this.props.chatMessage;\n    return(\n      <li>\n        <p className=\"username\">{chatMessage.username}</p>\n\n        {this.state.isEditing\n          ? <input type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n          : <p className=\"message_display\">{chatMessage.message}</p>}\n\n        <Moment format=\"MM/DD/YYYY hh:mm\" className=\"date-field\">{chatMessage.created_at}</Moment>\n\n        {chatMessage.is_owner && <button type='button' onClick={() => this.props.removeMessage(chatMessage.id)}>Delete</button>}\n\n        {this.state.isEditing\n          ? <button type='button' onClick={this.saveMessage}>Save</button>\n          // this.saveMessage called the saveMessage function above\n          : chatMessage.is_owner && <button type=\"button\" onClick={() => this.setState({isEditing: true})}>Edit</button>}\n\n      </li>\n    )\n  }\n}\n\nexport default MessageDetail\n","import React from 'react'\nimport MessageInputs from './MessageInputs'\nimport Cookies from 'js-cookie'\nimport MessageDetail from './MessageDetail'\n\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      // isEditing: null,\n      // text: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.updateMessage = this.updateMessage.bind(this);\n    this.removeMessage = this.removeMessage.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  componentDidMount() {\n    this.retrieveMessages = setInterval(this.fetchData, 500)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.retrieveMessages)\n  }\n\n  fetchData() {\n    fetch('/api/v1/chatmessages/')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => this.setState({ messages: data }));\n  }\n\n  removeMessage(id) {\n    const options = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n    }\n\n    fetch(`/api/v1/chatmessages/${id}/`, options)\n      .then(response => {\n        const messages = [...this.state.messages];\n        const index = messages.findIndex(message => message.id === id);\n        messages.splice(index, 1);\n        this.setState({messages})\n      })\n  }\n\n  updateMessage(chatMessage) {\n\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(chatMessage),\n      // the content being sent to the backend\n    }\n\n    fetch(`/api/v1/chatmessages/${chatMessage.id}/`, options)\n      .then(response => response.json())\n      // takes the response from the fetch request and turns it into json\n      .then(data => {\n        const messages = [...this.state.messages];\n        // makes a shallow copy of messages\n        const index = messages.findIndex(message => message.id === chatMessage.id);\n        // finds the index of the message and makes sure the message id is equal to the original chatMessage id to replace it\n        messages[index] = data;\n        // changes the value of the message to the value of the data that was PUT up\n        this.setState({messages});\n        // sets state to the new list of messages\n      });\n  }\n\n  render() {\n\n    const messages = this.state.messages.map(message => (\n\n    <MessageDetail key={message.id} chatMessage={message} updateMessage={this.updateMessage} removeMessage={this.removeMessage}/>\n\n\n    ))\n    return(\n      <>\n      <div className=\"container\">\n        <div className= \"chat-window\">\n        <ul>{messages}</ul>\n        </div>\n        <MessageInputs addmessage={this.addMessage}/>\n      </div>\n      </>\n    )\n  }\n}\n\n\nexport default ChatWindow\n","import React from 'react';\n\nclass Registration extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault();\n      this.props.handleRegistration(this.state);\n    }\n\n\n    render() {\n      return (\n        <div className=\"registration_container\">\n          <form onSubmit={this.handleSubmit}>\n            <h3>Choose A Username</h3>\n            <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n            <h3>Enter Your Email Address</h3>\n            <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n            <h3>Choose A Password</h3>\n            <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n            <h3>Enter Your Password Again</h3>\n            <input type=\"password\" placeholder=\"enter password again\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n            <h3>Click the button below to create your account!</h3>\n            <button className=\"login_button\" type=\"Submit\">Register</button>\n          </form>\n        </div>\n      );\n    }\n  }\n\nexport default Registration\n","import React from 'react';\n\nclass Login extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.handleLogin(this.state)\n    }\n\n\n    render() {\n      return (\n        <div className='login_container'>\n          <form onSubmit={this.handleSubmit}>\n            <h3>Username</h3>\n            <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n            <h3>Email</h3>\n            <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n            <h3>Password</h3>\n            <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password1} onChange={this.handleInput}/>\n            <h5>Press to login</h5>\n            <button className=\"login_button\" type=\"Submit\">Login</button>\n          </form>\n        </div>\n      );\n    }\n  }\n\nexport default Login\n","function Navbar(props) {\n  return(\n    <nav>\n        <button className=\"login\" onClick={() => props.handleNavigation('login')}>Login</button>\n        <button className=\"registration\" onClick={() => props.handleNavigation('registration')}>Register</button>\n        <button className=\"logout\" onClick={() => props.handleLogout('logout')}>Logout</button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport './App.css';\nimport ChatWindow from './ChatWindow'\nimport Registration from './Registration'\nimport Login from './Login'\nimport Cookies from 'js-cookie'\nimport Navbar from './Navbar'\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chatwindow' : 'login'\n    }\n\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n  handleNavigation(selection) {\n    this.setState({ selection });\n  }\n\n  async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`)\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n  async handleLogin(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n    async handleLogout() {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        }\n      };\n\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n      if(response.ok) {\n        Cookies.remove('Authorization');\n        this.setState({ selection: 'login' })\n      }\n    }\n\n\n\n\n  render(){\n    let html;\n\n    if(this.state.selection === 'registration') {\n      html = <Registration handleNavigation={this.handleNavigation} handleRegistration ={this.handleRegistration}/>\n    } else if(this.state.selection === 'login') {\n      html = <Login handleNavigation={this.handleNavigation} handleLogin={this.handleLogin}/>\n    } else if(this.state.selection === 'chatwindow') {\n      html = <ChatWindow />\n    }\n\n    return (\n      <>\n        <Navbar handleNavigation={this.handleNavigation} isAuth={this.state.selection === 'chatwindow'} handleLogout={this.handleLogout}/>\n              {html}\n      </>\n    )\n  }\n}\n\nexport default ChatApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatApp from './Components/ChatApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}