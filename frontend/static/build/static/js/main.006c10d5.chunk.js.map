{"version":3,"sources":["Components/MessageInputs.js","Components/ChatWindow.js","Components/Registration.js","Components/Login.js","Components/Navbar.js","Components/ChatApp.js","reportWebVitals.js","index.js"],"names":["MessageInputs","props","state","userinput","messages","addMessage","bind","handleInput","e","this","setState","target","name","value","message","options","method","headers","Cookies","get","body","JSON","stringify","fetch","then","response","map","input","id","className","onSubmit","type","onChange","React","Component","ChatWindow","json","data","username","created_at","addmessage","Registration","email","password1","password2","handleSubmit","preventDefault","handleRegistration","placeholder","Login","password","handleLogin","Navbar","onClick","handleNavigation","handleLogout","ChatApp","selection","user","a","handleError","err","console","warn","catch","ok","set","key","remove","isAuth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.006c10d5.chunk.js","sourcesContent":["import React from 'react'\nimport Cookies from 'js-cookie'\n\nclass MessageInputs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinput: [],\n      messages: [],\n    }\n\n    this.addMessage = this.addMessage.bind(this)\n    this.handleInput = this.handleInput.bind(this)\n\n  }\n\n  handleInput(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  addMessage(e) {\n\n      const message = {\n        message: this.state.message,\n      };\n\n      const options = {\n        method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(message),\n      }\n\n      fetch('/api/v1/chatmessages/', options)\n        .then(response => {\n          const messages = [...this.state.messages];\n          this.setState({ messages })\n        })\n    }\n\n\n\n  render() {\n    const userinput = this.state.userinput.map(input => (\n      <li key={input.id}>\n      <p>{userinput.input}</p>\n      </li>\n    ))\n    return(\n      <form className=\"input_field\" onSubmit={this.addMessage}>\n      <input className=\"type_input\" type=\"text\" name=\"message\" value={this.state.message} onChange={this.handleInput}/>\n      <button className=\"button_input\" type=\"submit\">Send</button>\n      </form>\n    )\n  }\n}\n\nexport default MessageInputs\n","import React from 'react'\nimport MessageInputs from './MessageInputs'\nimport Cookies from 'js-cookie'\n\nclass ChatWindow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n    }\n  }\n\n  componentDidMount() {\n    fetch('/api/v1/chatmessages/')\n      .then(response => response.json())\n      .then(data => this.setState({ messages: data }));\n  }\n\n  removeMessage() {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      }\n    }\n    fetch('/api/v1/chatmessages/', options)\n\n  }\n\n\n  render() {\n    const messages = this.state.messages.map(message => (\n      <ul>\n      <li key={message.id}>\n        <p>{message.username}</p>\n        <p className=\"message_display\">{JSON.stringify(message.message)}</p>\n        <p className=\"date-field\">{message.created_at}</p>\n        <button>Delete</button>\n      </li>\n      </ul>\n    ))\n    return(\n      <>\n        {messages}\n        <MessageInputs addmessage={this.addMessage} />\n      </>\n    )\n  }\n}\n\nexport default ChatWindow\n","import React from 'react';\n\nclass Registration extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password1: '',\n        password2: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault();\n      this.props.handleRegistration(this.state);\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"enter password again\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n          <button type=\"Submit\">Register</button>\n        </form>\n      );\n    }\n  }\n\nexport default Registration\n","import React from 'react';\n\nclass Login extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        username: '',\n        email: '',\n        password: '',\n      }\n\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput(e) {\n      this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(e) {\n      e.preventDefault()\n      this.props.handleLogin(this.state)\n    }\n\n\n    render() {\n      return (\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password1} onChange={this.handleInput}/>\n          <button type=\"Submit\">Login</button>\n        </form>\n      );\n    }\n  }\n\nexport default Login\n","function Navbar(props) {\n  return(\n    <nav>\n      <div>\n        <button onClick={() => props.handleNavigation('login')}>Login</button>\n        <button onClick={() => props.handleNavigation('registration')}>Register</button>\n        <button onClick={() => props.handleLogout('logout')}>Logout</button>\n      </div>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import React from 'react';\nimport './App.css';\nimport ChatWindow from './ChatWindow'\nimport Registration from './Registration'\nimport Login from './Login'\nimport Cookies from 'js-cookie'\nimport Navbar from './Navbar'\n\nclass ChatApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selection: !!Cookies.get('Authorization') ? 'chatwindow' : 'login'\n    }\n\n    this.handleNavigation = this.handleNavigation.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n  handleNavigation(selection) {\n    this.setState({ selection });\n  }\n\n  async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`)\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n  async handleLogin(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n    const data = await response.json().catch(handleError);\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState({ selection: 'chatwindow' })\n    }\n\n    }\n\n    async handleLogout() {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        }\n      };\n\n      const handleError = (err) => console.warn(err);\n      const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n      if(response.ok) {\n        Cookies.remove('Authorization');\n        this.setState({ selection: 'login' })\n      }\n    }\n\n\n\n\n\n\n  render(){\n\n    return (\n      <>\n        <Navbar handleNavigation={this.handleNavigation} isAuth={this.state.selection === 'chatwindow'} handleLogout={this.handleLogout}/>\n        <div className=\"container\">\n          {this.state.selection === 'login' && <Login handleNavigation={this.handleNavigation} handleLogin={this.handleLogin}/>}\n          {this.state.selection === 'registration' && <Registration handleNavigation={this.handleNavigation} handleRegistration ={this.handleRegistration}/>}\n          {this.state.selection === 'chatwindow' && <ChatWindow />}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default ChatApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ChatApp from './Components/ChatApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}